#include<iostream>
using namespace std;

void merge(int *arr,int s,int e){
	int mid=(s+e)/2;
	
	int len1=mid-s+1;
	int len2=e-mid;
	
	int *First=new int[len1];
	int *Second=new int[len2];
	
	
	int k=s;
	for(int i=0;i<len1;i++){
		First[i]=arr[k++];
	}
	
	
	k=mid+1;
	for(int i=0;i<len2;i++){
		Second[i]=arr[k++];
	}
	
	
	int index1=0;
	int index2=0;
	k=s;
	while(index1<len1 &&index2<len2){
		if (First[index1]<Second[index2]){
			arr[k++]=First[index1++];
		}
		else{
			arr[k++]=Second[index2++];
		}
	}
	
	while(index1<len1){
		arr[k++]=First[index1++];
		
	}
	while(index2<len2){
		arr[k++]=Second[index2++];
		
	}
}

void mergesort(int *arr,int s,int e){
	int mid=(s+e)/2;
	
	if(s>=e){
		return;
		
	}
	mergesort(arr,s,mid);
	mergesort(arr,mid+1,e);
	merge(arr,s,e);
}
int main(){
	int arr1[5]={2,7,4,9,2};
	int n=5;
	mergesort(arr1,0,n-1);
	for(int i=0;i<5;i++){
		cout<<arr1[i];
	}
	
}